/*
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.inf.mmdd.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import uk.ac.kcl.inf.mmdd.ide.contentassist.antlr.internal.InternalIdappdsmlParser;
import uk.ac.kcl.inf.mmdd.services.IdappdsmlGrammarAccess;

public class IdappdsmlParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(IdappdsmlGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, IdappdsmlGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getContractAccess().getGroup(), "rule__Contract__Group__0");
			builder.put(grammarAccess.getContractAccess().getGroup_3(), "rule__Contract__Group_3__0");
			builder.put(grammarAccess.getContractAccess().getGroup_4(), "rule__Contract__Group_4__0");
			builder.put(grammarAccess.getContractAccess().getGroup_5(), "rule__Contract__Group_5__0");
			builder.put(grammarAccess.getContractAccess().getGroup_6(), "rule__Contract__Group_6__0");
			builder.put(grammarAccess.getContractAccess().getGroup_6_3(), "rule__Contract__Group_6_3__0");
			builder.put(grammarAccess.getTermsAccess().getGroup(), "rule__Terms__Group__0");
			builder.put(grammarAccess.getTermsAccess().getGroup_3(), "rule__Terms__Group_3__0");
			builder.put(grammarAccess.getInsurableObjectAccess().getGroup(), "rule__InsurableObject__Group__0");
			builder.put(grammarAccess.getInsuranceCompanyAccess().getGroup(), "rule__InsuranceCompany__Group__0");
			builder.put(grammarAccess.getInsuranceCompanyAccess().getGroup_3(), "rule__InsuranceCompany__Group_3__0");
			builder.put(grammarAccess.getCustomerAccess().getGroup(), "rule__Customer__Group__0");
			builder.put(grammarAccess.getCustomerAccess().getGroup_3(), "rule__Customer__Group_3__0");
			builder.put(grammarAccess.getContractAccess().getInsurableobjectAssignment_3_1(), "rule__Contract__InsurableobjectAssignment_3_1");
			builder.put(grammarAccess.getContractAccess().getInsurancecompanyAssignment_4_1(), "rule__Contract__InsurancecompanyAssignment_4_1");
			builder.put(grammarAccess.getContractAccess().getCustomerAssignment_5_1(), "rule__Contract__CustomerAssignment_5_1");
			builder.put(grammarAccess.getContractAccess().getTermsAssignment_6_2(), "rule__Contract__TermsAssignment_6_2");
			builder.put(grammarAccess.getContractAccess().getTermsAssignment_6_3_1(), "rule__Contract__TermsAssignment_6_3_1");
			builder.put(grammarAccess.getTermsAccess().getInsurableobjectAssignment_3_1(), "rule__Terms__InsurableobjectAssignment_3_1");
			builder.put(grammarAccess.getInsuranceCompanyAccess().getAddressAssignment_3_1(), "rule__InsuranceCompany__AddressAssignment_3_1");
			builder.put(grammarAccess.getCustomerAccess().getAddressAssignment_3_1(), "rule__Customer__AddressAssignment_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private IdappdsmlGrammarAccess grammarAccess;

	@Override
	protected InternalIdappdsmlParser createParser() {
		InternalIdappdsmlParser result = new InternalIdappdsmlParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public IdappdsmlGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(IdappdsmlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
